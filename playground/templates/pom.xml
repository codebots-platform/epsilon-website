<project>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>epsilon-maven</artifactId>
    <groupId>org.eclipse.epsilon</groupId>
    <version>1.0-SNAPSHOT</version>
    <pluginRepositories>
        <pluginRepository>
            <id>Sonatype</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <configuration>
                            <target>
                                <!-- Set up the core Epsilon tasks -->
                                <taskdef resource="org/eclipse/epsilon/workflow/tasks/tasks.xml" />

                                <!-- Set up the Epsilon EMF tasks -->
                                <taskdef resource="org/eclipse/epsilon/workflow/tasks/emf/tasks.xml" />
                                
                                {{#if etl}}
                                <!-- Load the source.flexmi EMF model -->
                                <epsilon.emf.loadModel name="Source" modelfile="source.flexmi" metamodelfile="source.emf" />

                                <!-- Load the target.xmi EMF model -->
                                <epsilon.emf.loadModel name="Target" modelfile="target.xmi" metamodelfile="target.emf" read="false" store="true"/>

                                <!-- Run program.{{ language }} against it -->
                                <epsilon.{{ task }} src="program.{{ language }}">
                                    <model ref="Source" />
                                    <model ref="Target" />
                                </epsilon.{{ task }}>

                                <!-- Dispose of both models -->
                                <epsilon.disposeModel model="Source"/>
                                <epsilon.disposeModel model="Target"/>
                                {{else}}
                                <!-- Load the model.flexmi EMF model -->
                                <epsilon.emf.loadModel name="M" modelfile="model.flexmi" metamodelfile="metamodel.emf" />

                                <!-- Run program.{{ language }} against it -->
                                <epsilon.{{ task }} src="program.{{ language }}"{{#if egl}} target="generated.txt"{{/if}}>
                                    <model ref="M" />
                                </epsilon.{{ task }}>

                                <!-- Dispose of the model -->
                                <epsilon.disposeModel model="M"/>
                                {{/if}}
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.epsilon</groupId>
                        <artifactId>org.eclipse.epsilon.workflow</artifactId>
                        <version>2.4.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.epsilon</groupId>
                        <artifactId>org.eclipse.epsilon.workflow.emf</artifactId>
                        <version>2.4.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.eclipse.emfatic</groupId>
                        <artifactId>org.eclipse.emfatic.core</artifactId>
                        <version>1.1.0-SNAPSHOT</version>
                        <exclusions>
                            <exclusion>
                                <groupId>org.eclipse.platform</groupId>
                                <artifactId>*</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
  