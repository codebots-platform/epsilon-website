digraph G {
	[* Default fonts for edges and nodes *]
	node[fontname=Tahoma, fontsize=10]
	edge[fontname=Tahoma, fontsize=10]
	
	[* The graph should be drawn left to right *]
	rankdir=LR
	
	[* The components of the system *]
	[%for (c in Component.all){%]
	[%=c.toDot()%]
	[%}%]
	
	[* The connectors of the system *]
	[%for (c in Connector.all){%]
	[%=c.source.getDotID()%] -> [%=c.target.getDotID()%]
	[%}%]
}

[%
/**
 * Generates the dot representation of a component
*/
@template
operation Component toDot() {
%]
	[%=self.name%] [shape=plaintext, label=<
	<table border="0" cellspacing="0" cellpadding="0">
		<tr>
			<td border="1">
				<table border="0" cellspacing="0" cellpadding="0" bgcolor="azure">
					<tr>
						<td>&nbsp;</td><td>&nbsp;</td><td cellpadding="2" align="right"></td>
					</tr>
					[%for (i in 0.to(Sequence{self.getInPorts().size(), self.getOutPorts().size()}.max())){%]
					<tr>
						[%=getPortCell(self.getInPorts(), i)%]
						<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
						[%=getPortCell(self.getOutPorts(), i)%]
					</tr>
					<tr>
						<td>&nbsp;</td>
						<td>&nbsp;</td>
						<td>&nbsp;</td>
					</tr>
					[%}%]
				</table>
			</td>
		</tr>
		<tr>
			<td cellpadding="5">[%=self.name%]</td>
		</tr>
	</table>
	>];
[%
}

/**
 * Gets a unique ID for each port
 */ 
operation Port getDotID(){
    return self.component.name + ":" + self.name;
}

/**
 * Computes the label of a component port
 */
operation getPortCell(ports : Collection, index : Integer) {
	var cell = "<td cellpadding='2' align='left'";
	if (ports.size > index) {
		cell += " port='" + ports.at(index).name + 
			"'><font color1='#727372' point-size='9'>" 
			+ ports.at(index).name + "</font>";
	}
	else {
		cell += ">";
	}
	cell += "</td>";
	return cell;
}

operation Component getOutPorts() {
    return self.ports.select(p : OutPort | true);
}

operation Component getInPorts() {
    return self.ports.select(p : InPort | true);
}
%]